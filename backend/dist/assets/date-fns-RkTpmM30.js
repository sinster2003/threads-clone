function u(t){const n=Object.prototype.toString.call(t);return t instanceof Date||typeof t=="object"&&n==="[object Date]"?new t.constructor(+t):typeof t=="number"||n==="[object Number]"||typeof t=="string"||n==="[object String]"?new Date(t):new Date(NaN)}const M=43200,P=1440;let W={};function T(){return W}function S(t){const n=new Date(Date.UTC(t.getFullYear(),t.getMonth(),t.getDate(),t.getHours(),t.getMinutes(),t.getSeconds(),t.getMilliseconds()));return n.setUTCFullYear(t.getFullYear()),t.getTime()-n.getTime()}function w(t,n){const e=u(t),r=u(n),a=e.getTime()-r.getTime();return a<0?-1:a>0?1:a}function k(t,n){const e=u(t),r=u(n),a=e.getFullYear()-r.getFullYear(),s=e.getMonth()-r.getMonth();return a*12+s}function F(t){return t?Math[t]:Math.trunc}function p(t,n){return u(t).getTime()-u(n).getTime()}function x(t){const n=u(t);return n.setHours(23,59,59,999),n}function C(t){const n=u(t),e=n.getMonth();return n.setFullYear(n.getFullYear(),e+1,0),n.setHours(23,59,59,999),n}function O(t){const n=u(t);return+x(n)==+C(n)}function X(t,n){const e=u(t),r=u(n),a=w(e,r),s=Math.abs(k(e,r));let i;if(s<1)i=0;else{e.getMonth()===1&&e.getDate()>27&&e.setDate(30),e.setMonth(e.getMonth()-a*s);let o=w(e,r)===-a;O(u(t))&&s===1&&w(t,r)===1&&(o=!1),i=a*(s-Number(o))}return i===0?0:i}function j(t,n,e){const r=p(t,n)/1e3;return F(e==null?void 0:e.roundingMethod)(r)}const A={lessThanXSeconds:{one:"less than a second",other:"less than {{count}} seconds"},xSeconds:{one:"1 second",other:"{{count}} seconds"},halfAMinute:"half a minute",lessThanXMinutes:{one:"less than a minute",other:"less than {{count}} minutes"},xMinutes:{one:"1 minute",other:"{{count}} minutes"},aboutXHours:{one:"about 1 hour",other:"about {{count}} hours"},xHours:{one:"1 hour",other:"{{count}} hours"},xDays:{one:"1 day",other:"{{count}} days"},aboutXWeeks:{one:"about 1 week",other:"about {{count}} weeks"},xWeeks:{one:"1 week",other:"{{count}} weeks"},aboutXMonths:{one:"about 1 month",other:"about {{count}} months"},xMonths:{one:"1 month",other:"{{count}} months"},aboutXYears:{one:"about 1 year",other:"about {{count}} years"},xYears:{one:"1 year",other:"{{count}} years"},overXYears:{one:"over 1 year",other:"over {{count}} years"},almostXYears:{one:"almost 1 year",other:"almost {{count}} years"}},N=(t,n,e)=>{let r;const a=A[t];return typeof a=="string"?r=a:n===1?r=a.one:r=a.other.replace("{{count}}",n.toString()),e!=null&&e.addSuffix?e.comparison&&e.comparison>0?"in "+r:r+" ago":r};function D(t){return(n={})=>{const e=n.width?String(n.width):t.defaultWidth;return t.formats[e]||t.formats[t.defaultWidth]}}const Y={full:"EEEE, MMMM do, y",long:"MMMM do, y",medium:"MMM d, y",short:"MM/dd/yyyy"},_={full:"h:mm:ss a zzzz",long:"h:mm:ss a z",medium:"h:mm:ss a",short:"h:mm a"},I={full:"{{date}} 'at' {{time}}",long:"{{date}} 'at' {{time}}",medium:"{{date}}, {{time}}",short:"{{date}}, {{time}}"},R={date:D({formats:Y,defaultWidth:"full"}),time:D({formats:_,defaultWidth:"full"}),dateTime:D({formats:I,defaultWidth:"full"})},V={lastWeek:"'last' eeee 'at' p",yesterday:"'yesterday at' p",today:"'today at' p",tomorrow:"'tomorrow at' p",nextWeek:"eeee 'at' p",other:"P"},z=(t,n,e,r)=>V[t];function y(t){return(n,e)=>{const r=e!=null&&e.context?String(e.context):"standalone";let a;if(r==="formatting"&&t.formattingValues){const i=t.defaultFormattingWidth||t.defaultWidth,o=e!=null&&e.width?String(e.width):i;a=t.formattingValues[o]||t.formattingValues[i]}else{const i=t.defaultWidth,o=e!=null&&e.width?String(e.width):t.defaultWidth;a=t.values[o]||t.values[i]}const s=t.argumentCallback?t.argumentCallback(n):n;return a[s]}}const L={narrow:["B","A"],abbreviated:["BC","AD"],wide:["Before Christ","Anno Domini"]},q={narrow:["1","2","3","4"],abbreviated:["Q1","Q2","Q3","Q4"],wide:["1st quarter","2nd quarter","3rd quarter","4th quarter"]},J={narrow:["J","F","M","A","M","J","J","A","S","O","N","D"],abbreviated:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],wide:["January","February","March","April","May","June","July","August","September","October","November","December"]},E={narrow:["S","M","T","W","T","F","S"],short:["Su","Mo","Tu","We","Th","Fr","Sa"],abbreviated:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],wide:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"]},H={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"morning",afternoon:"afternoon",evening:"evening",night:"night"}},Q={narrow:{am:"a",pm:"p",midnight:"mi",noon:"n",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},abbreviated:{am:"AM",pm:"PM",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"},wide:{am:"a.m.",pm:"p.m.",midnight:"midnight",noon:"noon",morning:"in the morning",afternoon:"in the afternoon",evening:"in the evening",night:"at night"}},U=(t,n)=>{const e=Number(t),r=e%100;if(r>20||r<10)switch(r%10){case 1:return e+"st";case 2:return e+"nd";case 3:return e+"rd"}return e+"th"},B={ordinalNumber:U,era:y({values:L,defaultWidth:"wide"}),quarter:y({values:q,defaultWidth:"wide",argumentCallback:t=>t-1}),month:y({values:J,defaultWidth:"wide"}),day:y({values:E,defaultWidth:"wide"}),dayPeriod:y({values:H,defaultWidth:"wide",formattingValues:Q,defaultFormattingWidth:"wide"})};function b(t){return(n,e={})=>{const r=e.width,a=r&&t.matchPatterns[r]||t.matchPatterns[t.defaultMatchWidth],s=n.match(a);if(!s)return null;const i=s[0],o=r&&t.parsePatterns[r]||t.parsePatterns[t.defaultParseWidth],l=Array.isArray(o)?$(o,g=>g.test(i)):K(o,g=>g.test(i));let d;d=t.valueCallback?t.valueCallback(l):l,d=e.valueCallback?e.valueCallback(d):d;const h=n.slice(i.length);return{value:d,rest:h}}}function K(t,n){for(const e in t)if(Object.prototype.hasOwnProperty.call(t,e)&&n(t[e]))return e}function $(t,n){for(let e=0;e<t.length;e++)if(n(t[e]))return e}function G(t){return(n,e={})=>{const r=n.match(t.matchPattern);if(!r)return null;const a=r[0],s=n.match(t.parsePattern);if(!s)return null;let i=t.valueCallback?t.valueCallback(s[0]):s[0];i=e.valueCallback?e.valueCallback(i):i;const o=n.slice(a.length);return{value:i,rest:o}}}const Z=/^(\d+)(th|st|nd|rd)?/i,tt=/\d+/i,et={narrow:/^(b|a)/i,abbreviated:/^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,wide:/^(before christ|before common era|anno domini|common era)/i},nt={any:[/^b/i,/^(a|c)/i]},at={narrow:/^[1234]/i,abbreviated:/^q[1234]/i,wide:/^[1234](th|st|nd|rd)? quarter/i},rt={any:[/1/i,/2/i,/3/i,/4/i]},ot={narrow:/^[jfmasond]/i,abbreviated:/^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,wide:/^(january|february|march|april|may|june|july|august|september|october|november|december)/i},it={narrow:[/^j/i,/^f/i,/^m/i,/^a/i,/^m/i,/^j/i,/^j/i,/^a/i,/^s/i,/^o/i,/^n/i,/^d/i],any:[/^ja/i,/^f/i,/^mar/i,/^ap/i,/^may/i,/^jun/i,/^jul/i,/^au/i,/^s/i,/^o/i,/^n/i,/^d/i]},st={narrow:/^[smtwf]/i,short:/^(su|mo|tu|we|th|fr|sa)/i,abbreviated:/^(sun|mon|tue|wed|thu|fri|sat)/i,wide:/^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i},ut={narrow:[/^s/i,/^m/i,/^t/i,/^w/i,/^t/i,/^f/i,/^s/i],any:[/^su/i,/^m/i,/^tu/i,/^w/i,/^th/i,/^f/i,/^sa/i]},ct={narrow:/^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,any:/^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i},dt={any:{am:/^a/i,pm:/^p/i,midnight:/^mi/i,noon:/^no/i,morning:/morning/i,afternoon:/afternoon/i,evening:/evening/i,night:/night/i}},lt={ordinalNumber:G({matchPattern:Z,parsePattern:tt,valueCallback:t=>parseInt(t,10)}),era:b({matchPatterns:et,defaultMatchWidth:"wide",parsePatterns:nt,defaultParseWidth:"any"}),quarter:b({matchPatterns:at,defaultMatchWidth:"wide",parsePatterns:rt,defaultParseWidth:"any",valueCallback:t=>t+1}),month:b({matchPatterns:ot,defaultMatchWidth:"wide",parsePatterns:it,defaultParseWidth:"any"}),day:b({matchPatterns:st,defaultMatchWidth:"wide",parsePatterns:ut,defaultParseWidth:"any"}),dayPeriod:b({matchPatterns:ct,defaultMatchWidth:"any",parsePatterns:dt,defaultParseWidth:"any"})},ht={code:"en-US",formatDistance:N,formatLong:R,formatRelative:z,localize:B,match:lt,options:{weekStartsOn:0,firstWeekContainsDate:1}};function ft(t,n,e){const r=T(),a=(e==null?void 0:e.locale)??r.locale??ht,s=2520,i=w(t,n);if(isNaN(i))throw new RangeError("Invalid time value");const o=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:i});let l,d;i>0?(l=u(n),d=u(t)):(l=u(t),d=u(n));const h=j(d,l),g=(S(d)-S(l))/1e3,c=Math.round((h-g)/60);let m;if(c<2)return e!=null&&e.includeSeconds?h<5?a.formatDistance("lessThanXSeconds",5,o):h<10?a.formatDistance("lessThanXSeconds",10,o):h<20?a.formatDistance("lessThanXSeconds",20,o):h<40?a.formatDistance("halfAMinute",0,o):h<60?a.formatDistance("lessThanXMinutes",1,o):a.formatDistance("xMinutes",1,o):c===0?a.formatDistance("lessThanXMinutes",1,o):a.formatDistance("xMinutes",c,o);if(c<45)return a.formatDistance("xMinutes",c,o);if(c<90)return a.formatDistance("aboutXHours",1,o);if(c<P){const f=Math.round(c/60);return a.formatDistance("aboutXHours",f,o)}else{if(c<s)return a.formatDistance("xDays",1,o);if(c<M){const f=Math.round(c/P);return a.formatDistance("xDays",f,o)}else if(c<M*2)return m=Math.round(c/M),a.formatDistance("aboutXMonths",m,o)}if(m=X(d,l),m<12){const f=Math.round(c/M);return a.formatDistance("xMonths",f,o)}else{const f=m%12,v=Math.floor(m/12);return f<3?a.formatDistance("aboutXYears",v,o):f<9?a.formatDistance("overXYears",v,o):a.formatDistance("almostXYears",v+1,o)}}function mt(t,n){return ft(t,Date.now(),n)}export{mt as f};
